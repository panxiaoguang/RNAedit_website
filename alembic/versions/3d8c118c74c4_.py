"""empty message

Revision ID: 3d8c118c74c4
Revises: 
Create Date: 2025-04-18 14:31:35.425591

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '3d8c118c74c4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organ',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repeat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repeatclass', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gene',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chromosome', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('end', sa.Integer(), nullable=False),
    sa.Column('strand', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ensembly_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('species_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tissue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('organ_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organ_id'], ['organ.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rnaediting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chromosome', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('ref', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('alt', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('repeat_id', sa.Integer(), nullable=True),
    sa.Column('gene_id', sa.Integer(), nullable=True),
    sa.Column('region', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('exfun', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('samplenumbers', sa.Integer(), nullable=False),
    sa.Column('tissuenumbers', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.id'], ),
    sa.ForeignKeyConstraint(['repeat_id'], ['repeat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transcript',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transcript_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('chromosome', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('end', sa.Integer(), nullable=False),
    sa.Column('transcript_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gene_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('aminochange',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('change', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('transcript_id', sa.Integer(), nullable=True),
    sa.Column('rnaediting_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rnaediting_id'], ['rnaediting.id'], ),
    sa.ForeignKeyConstraint(['transcript_id'], ['transcript.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chromosome', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('end', sa.Integer(), nullable=False),
    sa.Column('transcript_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['transcript_id'], ['transcript.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('editinglevel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rnaediting_id', sa.Integer(), nullable=True),
    sa.Column('tissue_id', sa.Integer(), nullable=True),
    sa.Column('level', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['rnaediting_id'], ['rnaediting.id'], ),
    sa.ForeignKeyConstraint(['tissue_id'], ['tissue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rnaeditingtissuelink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rnaediting_id', sa.Integer(), nullable=True),
    sa.Column('tissue_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rnaediting_id'], ['rnaediting.id'], ),
    sa.ForeignKeyConstraint(['tissue_id'], ['tissue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('utr',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chromosome', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('end', sa.Integer(), nullable=False),
    sa.Column('transcript_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['transcript_id'], ['transcript.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('utr')
    op.drop_table('rnaeditingtissuelink')
    op.drop_table('editinglevel')
    op.drop_table('cds')
    op.drop_table('aminochange')
    op.drop_table('transcript')
    op.drop_table('rnaediting')
    op.drop_table('tissue')
    op.drop_table('gene')
    op.drop_table('species')
    op.drop_table('repeat')
    op.drop_table('organ')
    # ### end Alembic commands ###
